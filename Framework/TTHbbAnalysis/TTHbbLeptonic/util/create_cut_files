#!/usr/bin/env python

# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
# This is a script to (re-)generate all butfiles we need for TTHbbLeptonic

import os
import sys
import ROOT
from PathResolver import PathResolver


# default list of cut-files
CutFilesList = [
        ('1l','data'),
        ('1l_fakes','data'),
        ('1l_ftrig','data'),
        ('1l_jer','data'),
        ('1l','mc16a'),
        ('1l','mc16c'),
        ('1l','mc16d'),
        ('1l_sys','mc16a'),
        ('1l_sys','mc16c'),
        ('1l_sys','mc16d'),
        ('1l_lrj','mc16a'),
        ('1l_lrj','mc16c'),
        ('1l_lrj','mc16d'),
        ('1l_jer','mc16a'),
        ('1l_jer','mc16c'),
        ('1l_jer','mc16d'),
        ('1l_jfl','mc16a'),
        ('1l_jfl','mc16c'),
        ('1l_jfl','mc16d'),
        ('1l_trf','mc16a'),
        ('1l_trf','mc16c'),
        ('1l_trf','mc16d'),
        ('2l','data'),
        ('2l_jer','data'),
        ('2l','mc16a'),
        ('2l','mc16c'),
        ('2l','mc16d'),
        ('2l_sys','mc16a'),
        ('2l_sys','mc16c'),
        ('2l_sys','mc16d'),
        ('2l_jer','mc16a'),
        ('2l_jer','mc16c'),
        ('2l_jer','mc16d'),
        ('2l_jfl','mc16a'),
        ('2l_jfl','mc16c'),
        ('2l_jfl','mc16d'),
        ('2l_trf','mc16a'),
        ('2l_trf','mc16c'),
        ('2l_trf','mc16d'),
        ('0l','data'),
        ('0l','mc16a'),
        ('0l','mc16c'),
        ('0l','mc16d'),
        ('0l_sys','mc16a'),
        ('0l_sys','mc16c'),
        ('0l_sys','mc16d'),
    ]

class CutFileConfig:
    savedChannels = [  ]
    stream = ''
    sampleType = ''
    cutfileName = ''
    doHplus = False
    doTRF = False
    doFakes = False
    doAlternateFakes = False # Alternative, looser loose definition for fake trigger studies
    doSysts = 'none'
    taggers = [  ]
    nEvents = -1 # all events by default
    outFileName = ''

def IsMC(config):
    if config.sampleType == 'data':
        return False
    elif (config.sampleType == 'mc16a' or config.sampleType == 'mc16c' or config.sampleType == 'mc16d'):
        return True

def Years(config):
    years = []
    if config.sampleType == 'mc16a':
        years = ['2015', '2016']
    elif config.sampleType == 'mc16c' or config.sampleType == 'mc16d':
        years = ['2017']
    elif config.sampleType == 'data':
        years = ['2015', '2016', '2017']
    return years

def GetStandardConfig(stream='',sampleType=''):
    config = CutFileConfig()
    if stream.find('1l') != -1:
        config.savedChannels = [ 'ejets', 'mujets', 'boosted_ejets', 'boosted_mujets', ]
    elif stream.find('2l')!= -1:
        config.savedChannels = [ 'ee', 'mumu', 'emu', ]
    elif stream.find('0l')!= -1:
        config.savedChannels = [ 'allhad', ]
    config.stream = stream
    config.sampleType = sampleType
    config.cutfileName = 'cuts_'+stream+'_'+sampleType+'.txt'
    config.doHplus = False
    if stream.find('trf') != -1:
        config.doTRF = True
    else:
        config.doTRF = False
    if stream=='1l_fakes': # standard fakes stream
        config.doFakes = True
        config.doAlternateFakes = False
    elif stream=='1l_ftrig': # fakes with looser loose definition - for fake trigger studies
        config.doFakes = True
        config.doAlternateFakes = True
    else:
        config.doFakes = False # no fakes at all
        config.doAlternateFakes = False
    if stream=='1l_sys' or stream=='2l_sys' or stream=='0l_sys': # all standard systematics (i.e. no large-R jets, no spplitted JER)
        config.doSysts = 'allStandard'
    elif stream=='1l_jer' or stream=='2l_jer': # only JER systs, slitted in more NPs
        config.doSysts = 'splittedJER'
    elif stream=='1l_jfl' or stream=='2l_jfl': # only jet flavour and response systs
        config.doSysts = 'jetFlavourCompositionAndResponse'
    elif stream=='1l_lrj': # only large-R jet systs
        config.doSysts = 'largeRjets'
    else:
        config.doSysts = 'none'
    config.taggers = [ 'MV2c10', 'DL1' ]
    if stream.find('0l')!= -1:
        config.taggers = [ 'MV2c10' ]
    config.nEvents = -1 # all events by default
    config.outFileName = 'out.root'
    return config

def Header(config):
    header = """
################################################################################
#                                                                              #
# SELECTION CONFIGURATION                                                      #
#                                                                              #
# This is a TTHbbAnalysis configuration for the AnalysisTop utility top-xaod.  #
#                                                                              #
# https://gitlab.cern.ch/atlasHTop/TTHbbAnalysis                               #
#                                                                              #
# This file was automatically generated                                        #
#                                                                              #
################################################################################

################################################################################
#                                                                              #
# PACKAGE LIBRARIES                                                            #
#                                                                              #
################################################################################

LibraryNames libTopEventSelectionTools libTopEventReconstructionTools  libTTHbbLeptonic  libJetSubStructureUtils

"""
    return header

def ObjectCollections(config):
    objectcollections = """
################################################################################
#                                                                              #
# OBJECT COLLECTIONS                                                           #
#                                                                              #
################################################################################

ElectronCollectionName Electrons
MuonCollectionName Muons
TauCollectionName TauJets

PhotonCollectionName None

METCollectionName MET_Reference_AntiKt4EMTopo
LooseMETCollectionName MET_Reference_AntiKt4EMTopo

JetCollectionName AntiKt4EMTopoJets

## options for large-R jets
LargeJetCollectionName AntiKt10LCTopoTrimmedPtFrac5SmallR20Jets
LargeJetSubstructure None

# need to stick to the "old" CaloMass since it allows the top tagger to go to lower pT than the new one
LargeRJESJMSConfig CaloMass

# Jet reclustering
UseRCJets True
RCJetPt 200000.0
UseVarRCJets False
UseRCJetSubstructure True

OverlapRemovalProcedure noTauJetOLR

"""
    return objectcollections

def Truth(config):
    truth = """
################################################################################
#                                                                              #
# TRUTH COLLECTIONS AND SETTINGS                                               #
#                                                                              #
################################################################################

#TruthCollectionName None
TruthCollectionName TruthParticles
#TruthJetCollectionName None
TruthJetCollectionName AntiKt4TruthWZJets
TopPartonHistory False
TruthBlockInfo False
PDFInfo False
#TopParticleLevel True
MCGeneratorWeights Nominal

"""
    return truth

def ObjectSelection(config):
    # header
    objectselection = """
################################################################################
#                                                                              #
# OBJECT LOADER AND OBJECT SELECTIONS                                          #
#                                                                              #
################################################################################

ObjectSelectionName TTHbbLeptonicObjectLoader

"""

    # now handling B-tag WPs
    BtagWPs = {}
    BtagWPs['MV2c10'] = [
        'FixedCutBEff_60',
        'FixedCutBEff_70',
        'FixedCutBEff_77',
        'FixedCutBEff_85',
        'FixedCutBEff_30',
        'FixedCutBEff_50',
        'FixedCutBEff_80',
        'FixedCutBEff_90',
        'Continuous',
        ]
    BtagWPs['DL1'] = [
        'FixedCutBEff_60',
        'FixedCutBEff_70',
        'FixedCutBEff_77',
        'FixedCutBEff_85',
        'FixedCutBEff_30',
        'FixedCutBEff_50',
        'FixedCutBEff_80',
        'FixedCutBEff_90',
        'Continuous'
        ]
    objectselection += 'BTaggingWP'
    for tagger in config.taggers:
        for WP in BtagWPs[tagger]:
            objectselection += ' '+tagger+':'+WP

    # lepton ID and isolation
    # if we run the fakes, the "loose" definition is different from what we use in standard selection
    # for fakes, the "loose" definition is used for the matrix-method, while for the standard selection it is used to perform the overlap removal
    if config.doFakes and not config.doAlternateFakes:
        objectselection += """

ElectronID TightLH
ElectronIDLoose MediumLH
MuonQuality Medium
MuonQualityLoose Medium

ElectronIsolation Gradient
ElectronIsolationLoose None
MuonIsolation Gradient
MuonIsolationLoose None
"""
    elif config.doFakes and config.doAlternateFakes:
        objectselection += """

ElectronID TightLH
ElectronIDLoose LooseAndBLayerLH
MuonQuality Medium
MuonQualityLoose Medium

ElectronIsolation Gradient
ElectronIsolationLoose None
MuonIsolation Gradient
MuonIsolationLoose None
"""
    else:
        objectselection += """

ElectronID TightLH
ElectronIDLoose MediumLH
#ElectronIDLoose LooseAndBLayerLH
MuonQuality Medium
MuonQualityLoose Loose

ElectronIsolation Gradient
ElectronIsolationLoose Loose
MuonIsolation Gradient
MuonIsolationLoose Loose
"""

    # kinematic cuts and Loose/Tight tree handling
    objectselection += """

ElectronPt 10000
MuonPt 10000
JetPt 25000
LargeRJetPt 200000
LargeRJetEta 2.0

TauJetConfigFile TTHbbLeptonic/tau_config.conf
TauJetConfigFileLoose TTHbbLeptonic/tau_config.conf

DoLoose Both
DoTight False
ApplyTightSFsInLooseTree True

"""

    # small addition for fakes
    if config.doFakes:
        objectselection += """
# For now: enables the dumping of the pre-scale values
# In the future: online computation of the MM weights
FakesMMWeights True

"""
    return objectselection

def Systematics(config):
    systematics = """
################################################################################
#                                                                              #
# EXPERIMENTAL SYSTEMATICS                                                     #
#                                                                              #
################################################################################

"""
    if config.doSysts == 'allStandard':
        systematics += """
Systematics AllElectrons,AllSmallRJets,AllMET,AllMuons
"""
    elif config.doSysts == 'splittedJER':
        systematics += """
Systematics JET_JER_NP0__1up,JET_JER_NP1__1up,JET_JER_NP2__1up,JET_JER_NP3__1up,JET_JER_NP4__1up,JET_JER_NP5__1up,JET_JER_NP6__1up,JET_JER_NP7__1up,JET_JER_NP8__1up,JET_JER_NP0__1down,JET_JER_NP1__1down,JET_JER_NP2__1down,JET_JER_NP3__1down,JET_JER_NP4__1down,JET_JER_NP5__1down,JET_JER_NP6__1down,JET_JER_NP7__1down,JET_JER_NP8__1down,JET_JER_NOISE_FORWARD__1up,JET_JER_CROSS_CALIB_FORWARD__1up
"""
    elif config.doSysts == 'jetFlavourCompositionAndResponse':
        systematics += """
Systematics JET_Flavor_Composition__1up,JET_Flavor_Composition__1down,JET_Flavor_Response__1up,JET_Flavor_Response__1down
"""
    elif config.doSysts == 'largeRjets':
        systematics += """
Systematics AllLargeRJets
"""
    else:
        systematics += """
Systematics Nominal
"""
    if config.doSysts == 'splittedJER':
        systematics += """
JetUncertainties_NPModel CategoryReduction
JetUncertainties_BunchSpacing 25ns
JetJERSmearingModel Full
EgammaSystematicModel 1NP_v1
LargeRJESUncertaintyConfig mass,Tau32WTA

"""
    else:
        systematics += """
JetUncertainties_NPModel CategoryReduction
JetUncertainties_BunchSpacing 25ns
JetJERSmearingModel Simple
EgammaSystematicModel 1NP_v1
LargeRJESUncertaintyConfig mass,Tau32WTA

"""
    return systematics

def Output(config):
    output = """
################################################################################
#                                                                              #
# OUTPUT                                                                       #
#                                                                              #
# This configuration uses event savers specialised for ttHbb.                  #
#                                                                              #
################################################################################

OutputFilename out.root
OutputFormat TTHbbLeptonicEventSaver
OutputEvents SelectedEvents

OutputFileSetAutoFlushZero True

#NEvents 1000

"""
    return output

def GRL(config):
    grl = """
################################################################################
#                                                                              #
# GOOD RUN LISTS                                                               #
#                                                                              #
# http://atlas.web.cern.ch/Atlas/GROUPS/DATABASE/GroupData/GoodRunsLists/      #
#                                                                              #
################################################################################

# GRL for full 2015+2016+2017 dataset (release 21)
GRLFile data15_13TeV/20170619/physics_25ns_21.0.19.xml data16_13TeV/20170605/physics_25ns_21.0.19.xml data17_13TeV/20180309/physics_25ns_Triggerno17e33prim.xml
GRLDir GoodRunsLists

"""
    if config.stream.find('0l')!= -1:
        grl=grl.replace('Triggerno17e33prim','JetHLT_Normal2017')
    if config.sampleType == 'data':
        return grl
    else:
        return '' # since we don't need a GRL for mc

def PileUp(config):
    pileupconfig = """
################################################################################
#                                                                              #
# PILEUP CONFIG                                                                #
#                                                                              #
################################################################################

"""
    if config.sampleType == 'data':
        pileupconfig += """
# Pile-up profile not needed for data (not used, but is needed to stop crash in configuration)
PRWConfigFiles dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16a.FS.v2/prw.merged.root
# lumicalc for full 2015+2016+2017 dataset (release 21, OflLumi-13TeV-008 for 2015, OfLumi-13TeV-009 for 2016, OflLumi-13TeV-010 for 2017)
PRWLumiCalcFiles GoodRunsLists/data15_13TeV/20170619/PHYS_StandardGRL_All_Good_25ns_276262-284484_OflLumi-13TeV-008.root GoodRunsLists/data16_13TeV/20180129/PHYS_StandardGRL_All_Good_25ns_297730-311481_OflLumi-13TeV-009.root GoodRunsLists/data17_13TeV/20180309/physics_25ns_Triggerno17e33prim.lumicalc.OflLumi-13TeV-010.root

"""
    elif config.sampleType == 'mc16a':
        pileupconfig += """
# MC16a pileup profile
PRWConfigFiles_FS dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16a.FS.v2/prw.merged.root
PRWConfigFiles_AF dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16a.AF.v2/prw.merged.root
PRWCustomScaleFactor 1.0/1.03:1.0/0.99:1.0/1.07
# lumicalc for full 2015+2016 dataset (release 21, 2015:OflLumi-13TeV-008 2016:OflLumi-13TeV-009 - Fully compatible)
PRWLumiCalcFiles GoodRunsLists/data15_13TeV/20170619/PHYS_StandardGRL_All_Good_25ns_276262-284484_OflLumi-13TeV-008.root GoodRunsLists/data16_13TeV/20180129/PHYS_StandardGRL_All_Good_25ns_297730-311481_OflLumi-13TeV-009.root

"""
    elif config.sampleType == 'mc16c':
        pileupconfig += """
# MC16c pileup profile
PRWConfigFiles_FS dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16c.FS.v2/prw.merged.root
PRWConfigFiles_AF dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16c.AF.v2/prw.merged.root
PRWCustomScaleFactor 1.0/1.03:1.0/0.99:1.0/1.07
# full 2017 dataset (release 21, OflLumi-13TeV-010)
PRWLumiCalcFiles GoodRunsLists/data17_13TeV/20180309/physics_25ns_Triggerno17e33prim.lumicalc.OflLumi-13TeV-010.root

"""
    elif config.sampleType == 'mc16d':
        pileupconfig += """
# MC16d pileup profile
PRWConfigFiles_FS dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16d.FS.v2/prw.merged.root
PRWConfigFiles_AF dev/AnalysisTop/PileupReweighting/user.iconnell.Top.PRW.MC16d.AF.v2/prw.merged.root
PRWCustomScaleFactor 1.0/1.03:1.0/0.99:1.0/1.07
# full 2017 dataset (release 21, OflLumi-13TeV-010)
PRWLumiCalcFiles GoodRunsLists/data17_13TeV/20180309/physics_25ns_Triggerno17e33prim.lumicalc.OflLumi-13TeV-010.root

"""
    if config.stream.find('0l')!= -1:
        pileupconfig=pileupconfig.replace('Triggerno17e33prim','JetHLT_Normal2017')
    return pileupconfig

def MetaData(config):
    metadata = """
###############################################################################
#                                                                             #
# Meta-data                                                                   #
#                                                                             #
###############################################################################

UseAodMetaData True
# the latter shouldn't be necessary anymore with p3388/p3390 samples or newer
# IsAFII False

"""
    return metadata

def Periods(config):
    periods = """
########################
### definition of the data periods
########################

"""
    if config.sampleType == 'data' or config.sampleType == 'mc16a':
        periods += """
SUB period_2015
RUN_NUMBER >= 276262
RUN_NUMBER <= 284484

SUB period_2016
RUN_NUMBER >= 297730
RUN_NUMBER <= 311481

"""
    if config.sampleType == 'data' or config.sampleType == 'mc16c' or config.sampleType == 'mc16d':
        periods += """
SUB period_2017
RUN_NUMBER >= 325713

"""
    return periods

def Triggers(channel,year,Fakes):
    out = 'SUB ' + channel + '_' + year + '\n'
    out += '. BASIC\n'
    out += '. period_'+year+'\n'
    if channel == 'EL':
        if year == '2015':
            # the loose triggers, for fakes
            if Fakes:
                out += 'TRIGDEC_LOOSE HLT_e24_lhmedium_L1EM20VH HLT_e60_lhmedium HLT_e120_lhloose HLT_e24_lhvloose_L1EM20VH HLT_e24_lhvloose_L1EM20VH_3j20noL1 HLT_e24_lhvloose_L1EM20VH_4j20noL1 HLT_e24_lhvloose_L1EM20VH_5j15noL1 HLT_e24_lhvloose_L1EM20VH_6j15noL1 HLT_e24_lhvloose_nod0_L1EM20VH HLT_e24_lhvloose_nod0_L1EM20VH_3j20noL1 HLT_e24_lhvloose_nod0_L1EM20VH_4j20noL1 HLT_e24_lhvloose_nod0_L1EM20VH_5j15noL1 HLT_e24_lhvloose_nod0_L1EM20VH_6j15noL1\n'
            # the tight triggers, for the baseline analysis
            out += 'TRIGDEC_TIGHT' if Fakes else 'TRIGDEC'
            out += ' HLT_e24_lhmedium_L1EM20VH HLT_e60_lhmedium HLT_e120_lhloose\n'
        elif year == '2016':
            # the loose triggers, for fakes
            if Fakes:
                out += 'TRIGDEC_LOOSE HLT_e26_lhtight_nod0_ivarloose HLT_e60_lhmedium_nod0 HLT_e140_lhloose_nod0 HLT_e26_lhmedium_nod0_L1EM20VH HLT_e26_lhmedium_nod0_L1EM20VH_3j20noL1 HLT_e26_lhmedium_nod0_L1EM20VH_4j20noL1 HLT_e26_lhmedium_nod0_L1EM20VH_5j15noL1 HLT_e26_lhmedium_nod0_L1EM20VH_6j15noL1 HLT_e26_lhvloose_nod0_L1EM20VH HLT_e26_lhvloose_nod0_L1EM20VH_3j20noL1 HLT_e26_lhvloose_nod0_L1EM20VH_4j20noL1 HLT_e26_lhvloose_nod0_L1EM20VH_5j15noL1 HLT_e26_lhvloose_nod0_L1EM20VH_6j15noL1\n'
            # the tight triggers, for the baseline analysis
            out += 'TRIGDEC_TIGHT' if Fakes else 'TRIGDEC'
            out += ' HLT_e26_lhtight_nod0_ivarloose HLT_e60_lhmedium_nod0 HLT_e140_lhloose_nod0\n'
        elif year == '2017':
            # the loose triggers, for fakes
            if Fakes:
                out += 'TRIGDEC_LOOSE HLT_e26_lhtight_nod0_ivarloose HLT_e60_lhmedium_nod0 HLT_e20_lhmedium_nod0_3j20_L1EM18VHI_3J20 HLT_e26_lhmedium_nod0_L1EM20VH HLT_e26_lhmedium_nod0_L1EM20VH_3j20noL1 HLT_e26_lhmedium_nod0_L1EM20VH_4j20noL1 HLT_e26_lhmedium_nod0_L1EM20VH_5j15noL1 HLT_e26_lhmedium_nod0_L1EM20VH_6j15noL1 HLT_e26_lhvloose_nod0_L1EM20VH HLT_e26_lhvloose_nod0_L1EM20VH_3j20noL1 HLT_e26_lhvloose_nod0_L1EM20VH_4j20noL1 HLT_e26_lhvloose_nod0_L1EM20VH_5j15noL1 HLT_e26_lhvloose_nod0_L1EM20VH_6j15noL1\n'
            # the tight triggers, for the baseline analysis
            out += 'TRIGDEC_TIGHT' if Fakes else 'TRIGDEC'
            out += ' HLT_e26_lhtight_nod0_ivarloose HLT_e60_lhmedium_nod0\n'
        out += 'EL_N 27000 >= 1\n\n'
    elif channel == 'MU':
        if year == '2015':
            # the loose triggers, for fakes
            if Fakes:
                out += 'TRIGDEC_LOOSE HLT_mu20_iloose_L1MU15 HLT_mu50 HLT_mu20_L1MU15 HLT_mu20_L1MU15_2j20noL1 HLT_mu20_L1MU15_3j20noL1 HLT_mu20_L1MU15_4j15noL1 HLT_mu20_L1MU15_5j15noL1 HLT_mu24 HLT_mu24_2j20noL1 HLT_mu24_3j20noL1 HLT_mu24_4j15noL1 HLT_mu24_5j15noL1\n'
            # the tight triggers, for the baseline analysis
            out += 'TRIGDEC_TIGHT' if Fakes else 'TRIGDEC'
            out += ' HLT_mu20_iloose_L1MU15 HLT_mu50\n'
        elif year == '2016':
            # the loose triggers, for fakes
            if Fakes:
                out += 'TRIGDEC_LOOSE HLT_mu26_ivarmedium HLT_mu50 HLT_mu24 HLT_mu24_2j20noL1 HLT_mu24_3j20noL1 HLT_mu24_4j15noL1 HLT_mu24_5j15noL1 HLT_mu26_2j20noL1 HLT_mu26_3j20noL1 HLT_mu26_4j15noL1 HLT_mu26_5j15noL1\n'
            # the tight triggers, for the baseline analysis
            out += 'TRIGDEC_TIGHT' if Fakes else 'TRIGDEC'
            out += ' HLT_mu26_ivarmedium HLT_mu50\n'
        elif year == '2017':
            # the loose triggers, for fakes
            if Fakes:
                out += 'TRIGDEC_LOOSE HLT_mu26_ivarmedium HLT_mu50 HLT_mu60_0eta105_msonly HLT_mu24 HLT_mu24_2j20noL1 HLT_mu24_3j20noL1 HLT_mu24_4j15noL1 HLT_mu24_5j15noL1 HLT_mu26_2j20noL1 HLT_mu26_3j20noL1 HLT_mu26_4j15noL1 HLT_mu26_5j15noL1\n'
            # the tight triggers, for the baseline analysis
            out += 'TRIGDEC_TIGHT' if Fakes else 'TRIGDEC'
            out += ' HLT_mu26_ivarmedium HLT_mu50 HLT_mu60_0eta105_msonly\n'
        out += 'MU_N 27000 >= 1\n\n'
    elif channel == 'EM':
        if year == '2015':
            out += 'TRIGDEC HLT_e24_lhmedium_L1EM20VH HLT_e60_lhmedium HLT_e120_lhloose HLT_mu20_iloose_L1MU15 HLT_mu50\n'
        elif year == '2016':
            out += 'TRIGDEC HLT_e26_lhtight_nod0_ivarloose HLT_e60_lhmedium_nod0 HLT_e140_lhloose_nod0 HLT_mu26_ivarmedium HLT_mu50\n'
        elif year == '2017':
            out += 'TRIGDEC HLT_e26_lhtight_nod0_ivarloose HLT_e60_lhmedium_nod0 HLT_mu26_ivarmedium HLT_mu50 HLT_mu60_0eta105_msonly\n'
        out += 'EL_N_OR_MU_N 27000 >= 1\n\n'
    elif channel == 'HAD':
        if year == '2015':
            out += 'TRIGDEC HLT_j260_320eta490 HLT_j360 HLT_3j175 HLT_4j85 HLT_5j60 HLT_6j45\n'
        elif year == '2016':
            out += 'TRIGDEC HLT_4j85 HLT_5j55 HLT_6j45 HLT_7j45 HLT_10j40_L14J20 HLT_4j100 HLT_5j70 HLT_6j60 HLT_5j70_L14J15 HLT_6j60_L14J15 HLT_7j45_L14J15 HLT_10j40_L14J15 HLT_6j45_0eta240 HLT_5j65_0eta240 HLT_5j65_0eta240_L14J15\n'
        elif year == '2017':
            out += 'TRIGDEC HLT_3j200 HLT_3j225 HLT_4j100 HLT_4j120 HLT_4j60_gsc100_boffperf_split HLT_4j60_gsc115_boffperf_split HLT_5j70_L14J15 HLT_5j85_L14J15 HLT_5j60_gsc85_boffperf_split HLT_5j60_gsc85_boffperf_split_L14J150ETA25 HLT_5j50_gsc70_boffperf_split HLT_5j50_gsc70_boffperf_split_L14J150ETA25 HLT_6j60_L14J15 HLT_6j70 HLT_6j70_L14J15 HLT_6j50_gsc70_boffperf_split HLT_6j50_gsc70_boffperf_split_L14J150ETA25 HLT_6j45_gsc60_boffperf_split HLT_6j45_gsc60_boffperf_split_L14J150ETA25 HLT_7j45_L14J15 HLT_7j25_gsc45_boffperf_split_L14J20 HLT_7j25_gsc45_boffperf_split_L14J150ETA25 HLT_10j40_L14J15 HLT_j175_gsc225_bmv2c1040_split HLT_j225_gsc275_bmv2c1070_split HLT_j225_gsc275_bmv2c1060_split HLT_j225_gsc300_bmv2c1077_split HLT_j225_gsc300_bmv2c1070_split HLT_j225_gsc360_bmv2c1085_split HLT_j225_gsc360_bmv2c1077_split HLT_j50_gsc65_bmv2c1040_split_3j50_gsc65_boffperf_split HLT_j55_gsc75_bmv2c1040_split_3j55_gsc75_boffperf_split HLT_j60_gsc85_bmv2c1050_split_3j60_gsc85_boffperf_split HLT_j150_gsc175_bmv2c1070_split_j45_gsc60_bmv2c1070_split HLT_j150_gsc175_bmv2c1060_split_j45_gsc60_bmv2c1060_split HLT_j110_gsc150_boffperf_split_2j35_gsc55_bmv2c1077_split_L1J85_3J30 HLT_j110_gsc150_boffperf_split_2j35_gsc55_bmv2c1070_split_L1J85_3J30 HLT_2j15_gsc35_bmv2c1050_split_2j15_gsc35_boffperf_split_L14J15.0ETA25 HLT_2j15_gsc35_bmv2c1040_split_2j15_gsc35_boffperf_split_L14J15.0ETA25 HLT_2j25_gsc45_bmv2c1060_split_2j25_gsc45_boffperf_split_L14J15.0ETA25 HLT_2j35_gsc55_bmv2c1070_split_2j35_gsc55_boffperf_split_L14J15.0ETA25 HLT_2j25_gsc45_bmv2c1050_split_2j25_gsc45_boffperf_split_L14J15.0ETA25 HLT_2j35_gsc55_bmv2c1060_split_2j35_gsc55_boffperf_split_L14J15.0ETA25 HLT_2j15_gsc35_bmv2c1060_split_3j15_gsc35_boffperf_split HLT_2j25_gsc45_bmv2c1070_split_3j25_gsc45_boffperf_split HLT_2j15_gsc35_bmv2c1050_split_3j15_gsc35_boffperf_split HLT_2j25_gsc45_bmv2c1060_split_3j25_gsc45_boffperf_split HLT_3j15_gsc35_bmv2c1070_split_j15_gsc35_boffperf_split_L14J15.0ETA25 HLT_4j15_gsc35_bmv2c1077_split_L14J15.0ETA25 HLT_2j15_gsc35_bmv2c1070_split_2j15_gsc35_bmv2c1085_split_L14J15.0ETA25 HLT_3j50_gsc65_bmv2c1077_split_L13J35.0ETA23\n'
        out += 'EL_N_OR_MU_N 27000 == 0\n\n'
    return out

def TTHbbSpecifics(config):
    ttHbbSpecifics = """
########################
### TTHbbAnalysis specific configurations
########################

"""

    doljets = False
    doBoosted = False
    doDilepton = False
    doAllhad = False
    for sel in config.savedChannels:
        if sel == 'ejets' or sel == 'mujets':
            doljets = True
        elif sel == 'boosted_ejets' or sel == 'boosted_mujets':
            doBoosted = True
        elif sel == 'ee' or sel == 'mumu' or sel == 'emu':
            doDilepton = True
        elif sel == 'allhad':
            doAllhad = True

# l+jets selection
    if doljets:
        ttHbbSpecifics += """
###############
### l+jets
###############

SUB SemilepBasic
TTHBBCREATEEVENT
TTHBBEDM
"""
        if config.sampleType == 'mc16a' or config.sampleType == 'mc16c' or config.sampleType == 'mc16d':
            ttHbbSpecifics += """
TTHBBTRUTHEDM
TTBARREWEIGHTING
JETTRUTHMATCHING SMALLJETS 0.3
"""
        ttHbbSpecifics += """
TTHBBREGIONS
"""
        if config.doTRF:
            ttHbbSpecifics += """
TRFCALC trf_WP:60 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:70 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:77 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:85 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
MVAVARS FixedCutBEff_70 FixedCutBEff_77 FixedCutBEff_85 Sort4 trf_60_2ex trf_60_2in trf_60_3ex trf_60_3in trf_60_4ex trf_60_4in trf_70_2ex trf_70_2in trf_70_3ex trf_70_3in trf_70_4ex trf_70_4in  trf_77_2ex trf_77_2in trf_77_3ex trf_77_3in trf_77_4ex trf_77_4in trf_85_2ex trf_85_2in trf_85_3ex trf_85_3in trf_85_4ex trf_85_4in
MCFAKES
"""
        else:
            ttHbbSpecifics += """
MVAVARS FixedCutBEff_85 Sort4
"""
        ttHbbSpecifics += """

SUB SemilepReco
NEUTRINO
TTHSEMILEPRECO Strategy:b4l4 BTag:85 Region:SemilepRegions_signalRegions=601 VarOption:6ji4bi XMLFlag:6ji4bi_b4l4_btag85 Flag:TTHReco
TTHSEMILEPRECO Strategy:b4l4 BTag:85 Region:SemilepRegions_signalRegions=501 VarOption:5je4bi XMLFlag:5je4bi_b4l4_btag85 Flag:TTHReco
TTHSEMILEPLHD

SUB SemilepClass
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_signalRegions=601 VarOption:6ji4bi XMLFlag:6j_signalRegions601_withRecob4l4_withLL Flag:TTHClassBDTOutput_inclusive RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionE=601 VarOption:6ji4bi XMLFlag:6j_optionE601_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionE=602 VarOption:6ji4bi XMLFlag:6j_optionE602_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionE=603 VarOption:6ji4bi XMLFlag:6j_optionE603_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionE=604 VarOption:6ji4bi XMLFlag:6j_optionE604_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionE=605 VarOption:6ji4bi XMLFlag:6j_optionE605_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco

TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_signalRegions=501 VarOption:5je4bi XMLFlag:5j_signalRegions501_withRecob4l4_withLL Flag:TTHClassBDTOutput_inclusive RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionH=501 VarOption:5je4bi XMLFlag:5j_optionH501_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionH=502 VarOption:5je4bi XMLFlag:5j_optionH502_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionH=503 VarOption:5je4bi XMLFlag:5j_optionH503_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL BTag:85 Region:SemilepRegions_optionH=504 VarOption:5je4bi XMLFlag:5j_optionH504_withRecob4l4_withLL Flag:TTHClassBDTOutput RecoFlag:TTHReco


TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_signalRegions=601 VarOption:6ji4bi XMLFlag:6j_signalRegions601_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag_inclusive RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionE=601 VarOption:6ji4bi XMLFlag:6j_optionE601_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionE=602 VarOption:6ji4bi XMLFlag:6j_optionE602_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionE=603 VarOption:6ji4bi XMLFlag:6j_optionE603_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionE=604 VarOption:6ji4bi XMLFlag:6j_optionE604_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionE=605 VarOption:6ji4bi XMLFlag:6j_optionE605_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco

TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_signalRegions=501 VarOption:5je4bi XMLFlag:5j_signalRegions501_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag_inclusive RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionH=501 VarOption:5je4bi XMLFlag:5j_optionH501_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionH=502 VarOption:5je4bi XMLFlag:5j_optionH502_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionH=503 VarOption:5je4bi XMLFlag:5j_optionH503_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:withRecob4l4_withLL_withBTag BTag:85 Region:SemilepRegions_optionH=504 VarOption:5je4bi XMLFlag:5j_optionH504_withRecob4l4_withLL_withBTag Flag:TTHClassBDTOutput_withBTag RecoFlag:TTHReco

TTHSEMILEPCLASSBDT Strategy:reduced_inclusive BTag:85 Region:SemilepRegions_signalRegions=601 VarOption:6ji4bi XMLFlag:6j_signalRegions601_withReco_withBTag_15_0511 Flag:ClassifBDTOutput_inclusive_withBTag_new RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:reduced_inclusive_nojet5 BTag:85 Region:SemilepRegions_signalRegions=601 VarOption:6ji4bi XMLFlag:6j_signalRegions601_withReco_withBTag_14noptjet5 Flag:ClassifBDTOutput_inclusive_withBTag_new_nopt5 RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:reduced BTag:85 Region:SemilepRegions_optionE=601 VarOption:6ji4bi XMLFlag:6j_default601_withReco_7 Flag:ClassifBDTOutput_NewUPR RecoFlag:TTHReco

TTHSEMILEPCLASSBDT Strategy:reduced_inclusive BTag:85 Region:SemilepRegions_signalRegions=501 VarOption:5je4bi XMLFlag:5j_signalRegions501_withReco_withBTag_15_op Flag:ClassifBDTOutput_inclusive_withBTag_new RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:reduced BTag:85 Region:SemilepRegions_optionH=501 VarOption:5je4bi XMLFlag:5j_default501_withReco_11_9 Flag:ClassifBDTOutput_NewUPR RecoFlag:TTHReco

TTHSEMILEPCLASSBDT Strategy:btagOnly1 BTag:85 Region:6ji4bi VarOption:6ji4bi XMLFlag:6ji4bi_btagOnly1_btag85 Flag:TTHClassBDTOutput_btagOnly1 RecoFlag:TTHReco
TTHSEMILEPCLASSBDT Strategy:btagOnly1 BTag:85 Region:SemilepRegions_optionE=604 VarOption:6ji4bi XMLFlag:6ji4bi_btagOnly1_btag85 Flag:TTHClassBDTOutput_btagOnly1 RecoFlag:TTHReco

TTHMULTICLASSBDT Strategy:ICHEP BTag:85 Region:5ji3bi VarOption:5je3bi85_01pt XMLFlag:5je3bi85_01pt Flag:TTHMultiClass;ttH;ttb;ttc;ttl
TTHMULTICLASSBDT Strategy:ICHEP BTag:85 Region:6ji3bi VarOption:6ji3bi85_01mv XMLFlag:6ji3bi85_01mv Flag:TTHMultiClass;ttH;ttb;ttc;ttl

"""
        if config.doHplus:
            ttHbbSpecifics += """
SUB Hplus
HplusDiscriminant 200 225 250 275 300 350 400 500 600 700 800 900 1000 1200 1400 1600 1800 2000
HplusBDT Semilep

"""
        else:
            ttHbbSpecifics += """
#SUB Hplus
#HplusDiscriminant 200 225 250 275 300 350 400 500 600 700 800 900 1000 1200 1400 1600 1800 2000
#HplusBDT Semilep

"""
        ttHbbSpecifics += """
SUB ttHbb_ljets_basic
. SemilepBasic
. SemilepReco
. SemilepClass
"""
        if config.doHplus:
            ttHbbSpecifics += """
. Hplus

"""
        else:
            ttHbbSpecifics += """
#. Hplus

"""

# boosted selection
    if doBoosted:
        ttHbbSpecifics += """
###############
### boosted
###############

SUB BoostedBasic
TTHBBCREATEEVENT"""
        if IsMC(config):
            ttHbbSpecifics += """
TTHBBTRUTHEDM
TTBARREWEIGHTING
JETTRUTHMATCHING LARGEJETS 1.0
MCFAKES"""
        ttHbbSpecifics += """
TTHBBEDM
TTHBBLARGEJETEDM
TTHBBREGIONS
"""
        if config.doTRF:
            ttHbbSpecifics += """
TRFCALC trf_WP:60 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:70 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:77 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:85 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
MVAVARS FixedCutBEff_70 FixedCutBEff_77 FixedCutBEff_85 Sort4 trf_60_2ex trf_60_2in trf_60_3ex trf_60_3in trf_60_4ex trf_60_4in trf_70_2ex trf_70_2in trf_70_3ex trf_70_3in trf_70_4ex trf_70_4in  trf_77_2ex trf_77_2in trf_77_3ex trf_77_3in trf_77_4ex trf_77_4in trf_85_2ex trf_85_2in trf_85_3ex trf_85_3in trf_85_4ex trf_85_4in
BOOSTEDSELECTION
TTHBOOSTEDBDT Strategy:RCJETS BTag:85 XMLFlag:_RC Flag:TTHBOOSTEDBDTOutput_RC
"""
        else:
            ttHbbSpecifics += """
MVAVARS FixedCutBEff_85 Sort4
BOOSTEDSELECTION
TTHBOOSTEDBDT Strategy:RCJETS BTag:85 XMLFlag:_RC Flag:TTHBOOSTEDBDTOutput_RC

"""

# dilepton selection
    if doDilepton:
        ttHbbSpecifics += """
###############
### dilepton
###############

SUB TTHEDM
TTHBBCREATEEVENT
TTHBBEDM
TTHBBTRUTHEDM
TTBARREWEIGHTING
JETTRUTHMATCHING SMALLJETS 0.3
TTHBBREGIONS
MCFAKES

SUB DILEPVARS
"""
        if config.doTRF:
            ttHbbSpecifics += """
TRFCALC trf_WP:60 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:70 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:77 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
TRFCALC trf_WP:85 trf_cdi:2017-21-13TeV-MC16-CDI-2018-02-09_v1.root trf_calibName:default trf_nbjetMax:4 trf_ignoreSF:NO trf_ignoreMCMC:NO ttH_btagAlgo:MV2c10
MVAVARS FixedCutBEff_70 FixedCutBEff_77 FixedCutBEff_85 Sort4 trf_60_2ex trf_60_2in trf_60_3ex trf_60_3in trf_60_4ex trf_60_4in trf_70_2ex trf_70_2in trf_70_3ex trf_70_3in trf_70_4ex trf_70_4in  trf_77_2ex trf_77_2in trf_77_3ex trf_77_3in trf_77_4ex trf_77_4in trf_85_2ex trf_85_2in trf_85_3ex trf_85_3in trf_85_4ex trf_85_4in
"""
        else:
            ttHbbSpecifics += """
MVAVARS FixedCutBEff_70 FixedCutBEff_85 Sort4
            """
        ttHbbSpecifics += """
TTHDILEPRECO Strategy:ICHEP Flag:TTHReco_ICHEP70 Region:4ji4bi
TTHDILEPRECO Strategy:ICHEP Flag:TTHReco_ICHEP70 Region:4ji3be
TTHDILEPRECO Strategy:4b Flag:TTHReco_4b BTag:85 Region:4ji4bi nuW:true

TTHDILEPCLASSBDT Flag:dileptonClassifBDT_fourAt85 Strategy:fourAt85 BTag:Sort4 RecoFlag:TTHReco_4b 
TTHDILEPCLASSBDT Flag:dileptonClassifBDT_twoAt77 Strategy:twoAt77 BTag:Sort4 RecoFlag:TTHReco_4b
TTHDILEPCLASSBDT Flag:dileptonClassifBDT_threetag Strategy:threetag BTag:70 RecoFlag:TTHReco_ICHEP70

TTHDILEPCLASSBDT Flag:dileptonClassifBDT_4jA3 Strategy:4j_A3 Region:DilepRegion_A3=1 RecoFlag:TTHReco_4b
TTHDILEPCLASSBDT Flag:dileptonClassifBDT_4jA3 Strategy:4j_A3 Region:DilepRegion_A3=3 RecoFlag:TTHReco_4b
TTHDILEPCLASSBDT Flag:dileptonClassifBDT_4jA3 Strategy:4j_A3 Region:DilepRegion_A3=2 RecoFlag:TTHReco_ICHEP70

TTHDILEPCLASSBDT Flag:dileptonClassifBDT_4jA3_withbtag Strategy:4j_bTagVars_A3 Region:DilepRegion_A3=3 RecoFlag:TTHReco_4b

"""
        if IsMC(config):
            ttHbbSpecifics += """
DILEPFAKES 1.18 1.31

"""
        ttHbbSpecifics += """
SUB ttHbb_dilepton_basic
. TTHEDM
. DILEPVARS

        """

# allhad selection
    if doAllhad:
        ttHbbSpecifics += """
###############
### allhad
###############

SUB ttHbb_allhad_basic
TTHBBCREATEEVENT
TTHBBEDM
JETHLTMATCH
TTHBBTRUTHEDM
#TTBARREWEIGHTING
JETTRUTHMATCHING SMALLJETS 0.3
TTHBBREGIONS
#MVAVARS FixedCutBEff_60 FixedCutBEff_70 FixedCutBEff_77 FixedCutBEff_85 Sort4
#MCFAKES

"""

    return ttHbbSpecifics

def BasicSelection(channel):
    basicselection = ''
    if channel == 'ejets':
        basicselection += """
########################
### e+jets selections
########################

SUB ejets_basic
EL_N 10000 >= 1
EL_N 10000 == 1
MU_N 10000 == 0
# at this point this selection is orthogonal to the others
EL_N 27000 == 1
EL_N_TIGHT 27000 == 1
TRIGMATCH
JETCLEAN LooseBad
JET_N 25000 >= 1
JET_N 25000 >= 2
JET_N 25000 >= 3
JET_N 25000 >= 4
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'mujets':
        basicselection += """
########################
### mu+jets selections
########################

SUB mujets_basic
MU_N 10000 >= 1
MU_N 10000 == 1
EL_N 10000 == 0
# at this point this selection is orthogonal to the others
MU_N 27000 == 1
MU_N_TIGHT 27000 == 1
TRIGMATCH
JETCLEAN LooseBad
JET_N 25000 >= 1
JET_N 25000 >= 2
JET_N 25000 >= 3
JET_N 25000 >= 4
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'boosted_ejets':
        basicselection += """
###############################
### boosted e+jets selections
###############################

SUB boosted_ejets_basic
EL_N 10000 >= 1
EL_N 10000 == 1
MU_N 10000 == 0
# at this point this selection is orthogonal to the others
EL_N 27000 == 1
EL_N_TIGHT 27000 == 1
TRIGMATCH
JETCLEAN LooseBad
LJET_N 200000 >= 1
JET_N 25000 >= 1
JET_N 25000 >= 2
JET_N 25000 >= 3
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'boosted_mujets':
        basicselection += """
###############################
### boosted mu+jets selections
###############################

SUB boosted_mujets_basic
MU_N 10000 >= 1
MU_N 10000 == 1
EL_N 10000 == 0
# at this point this selection is orthogonal to the others
MU_N 27000 == 1
MU_N_TIGHT 27000 == 1
TRIGMATCH
JETCLEAN LooseBad
LJET_N 200000 >= 1
JET_N 25000 >= 1
JET_N 25000 >= 2
JET_N 25000 >= 3
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'ee':
        basicselection += """
########################
### ee selections
########################

SUB ee_basic
EL_N 10000 >= 2
EL_N 10000 == 2
MU_N 10000 == 0
# at this point this selection is orthogonal to the others
EL_N 27000 >= 1
EL_N 10000 >= 2
EL_N 10000 == 2
EL_N_TIGHT 15000 == 2
TRIGMATCH
JETCLEAN LooseBad
JET_N 25000 >= 1
JET_N 25000 >= 2
OS
MLL > 15000
MLLWIN 83000 99000
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'mumu':
        basicselection += """
########################
### mumu selections
########################

SUB mumu_basic
MU_N 10000 >= 2
MU_N 10000 == 2
EL_N 10000 == 0
# at this point this selection is orthogonal to the others
MU_N 27000 >= 1
MU_N_TIGHT 10000 == 2
TRIGMATCH
JETCLEAN LooseBad
JET_N 25000 >= 1
JET_N 25000 >= 2
OS
MLL > 15000
MLLWIN 83000 99000
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'emu':
        basicselection += """
########################
### emu selections
########################

SUB emu_basic
EL_N 10000 >= 1
MU_N 10000 >= 1
EL_N 10000 == 1
MU_N 10000 == 1
# at this point this selection is orthogonal to the others
EL_N_OR_MU_N 27000 >= 1
EL_N_TIGHT 10000 == 1
MU_N_TIGHT 10000 == 1
TRIGMATCH
JETCLEAN LooseBad
JET_N 25000 >= 1
JET_N 25000 >= 2
OS
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    elif channel == 'allhad':
        basicselection += """
########################
### all hadronic selections
########################

SUB allhad_basic
EL_N 10000 == 0
MU_N 10000 == 0
# at this point this selection is orthogonal to the others
EL_N 27000 == 0
EL_N_TIGHT 27000 == 0
TRIGMATCH
JETCLEAN LooseBad
JET_N 25000 >= 1
JET_N 25000 >= 2
JET_N 25000 >= 3
JET_N 25000 >= 4
# Nbtag_MV2c10 or Nbtag_DL1 to be applied here (unless it's TRF mode)

"""
    return basicselection

def ActualSelection(config,channel):
    actualselection = ''
    # for fakes, don't apply the "tight" cut
    if (channel=='ejets' or channel=='mujets' or channel=='boosted_ejets' or channel=='boosted_mujets') and config.doFakes:
        actualselection += BasicSelection(channel).replace('EL_N_TIGHT','#EL_N_TIGHT').replace('MU_N_TIGHT','#MU_N_TIGHT')
    else:
        actualselection += BasicSelection(channel)

    for year in Years(config):
        suffixes = []
        # we loop on taggers unless it's TRF (i.e. pretag)
        if config.doTRF:
            suffixes = ['']
        else:
            for tag in config.taggers:
                suffixes.append('_'+tag)
        # we need to name it _Loose for l+jets when running the fakes
        if config.doFakes and (channel == 'ejets' or channel == 'mujets' or channel == 'boosted_ejets' or channel == 'boosted_mujets'):
            loosesuffixes = []
            for suf in suffixes:
                loosesuffixes.append(suf+'_Loose')
            suffixes = loosesuffixes
        # good, now we can loop on suffixes and write the actual selections
        for suf in suffixes:
            # full name of selection
            actualselection += 'SELECTION ' + channel + '_' + year + suf + '\n'
            # calling the trigger sub-selection
            actualselection += '. '
            if channel == 'ejets' or channel == 'boosted_ejets':
                actualselection += 'EL_' + year + '\n'
            elif channel == 'mujets' or channel == 'boosted_mujets':
                actualselection += 'MU_' + year + '\n'
            elif channel == 'ee':
                actualselection += 'EL_' + year + '\n'
            elif channel == 'mumu':
                actualselection += 'MU_' + year + '\n'
            elif channel == 'emu':
                actualselection += 'EM_' + year + '\n'
            elif channel == 'allhad':
                actualselection += 'HAD_' + year + '\n'
            # calling the basic selection
            actualselection += '. ' + channel + '_basic\n'
            # calling Nbtag selection, unless it's TRF
            if not config.doTRF:
                actualselection += '. Nbtag' + suf.rstrip('_Loose') + '\n'
            # finally, if we have to save it, we dump the variables, and save
            if channel in config.savedChannels:
                if channel == 'ejets' or channel == 'mujets':
                    actualselection += '. ttHbb_ljets_basic\n'
                elif channel == 'boosted_ejets' or channel == 'boosted_mujets':
                    actualselection += '. BoostedBasic\n'
                elif channel == 'ee' or channel == 'mumu' or channel == 'emu':
                    actualselection += '. ttHbb_dilepton_basic\n'
                elif channel == 'allhad':
                    actualselection += '. ttHbb_allhad_basic\n'
                # Crash if JETFLAVORPLOTS is activated for data 
                if IsMC(config):
                    actualselection += 'JETFLAVORPLOTS detailed\n' # if we save the selection, we also save the flavour composition histograms, need to use detailed in 21.2.30
                actualselection += 'SAVE\n'
            actualselection += '\n'

    return actualselection

def Selections(config):
    selections = """
###############################################################################
#                                                                             #
# Selections                                                                  #
#                                                                             #
###############################################################################

"""

# basic selections
    selections += """
########################
### basic selection with mandatory cuts for reco level
########################

SUB BASIC
INITIAL
GRL
GOODCALO
PRIVTX
RECO_LEVEL

"""

# data periods
    selections += Periods(config)

# triggers
    if config.stream.find('0l')!= -1:
        selections += """
########################
### hadronic trigger and offline cuts for reco-level selections
########################

"""
        for chan in [ 'HAD', ]:
            for y in Years(config):
                selections += Triggers(chan,y,config.doFakes)
    else:
        selections += """
########################
### lepton trigger and offline cuts for reco-level selections
########################

"""
        for chan in [ 'EL', 'MU', 'EM', ]:
            for y in Years(config):
                selections += Triggers(chan,y,config.doFakes)

# btag selectors
    if not config.doTRF:
        selections += """
########################
### Nbtag preselections
########################

"""
        for tagger in config.taggers:
            selections += 'SUB Nbtag_'+tagger+'\n'
            selections += 'JET_N_BTAG '+tagger+':FixedCutBEff_85 >= 1\n'
            selections += 'JET_N_BTAG '+tagger+':FixedCutBEff_85 >= 2\n\n'

# ttHbb specific configuration
    selections += TTHbbSpecifics(config)

# finally the actual selections - we loop on all channels
    if config.stream.find('0l')!= -1:
        for chan in [ 'allhad', ]:
            selections += ActualSelection(config,chan)
    else:
        for chan in [ 'ejets', 'mujets', 'boosted_ejets', 'boosted_mujets', 'ee', 'mumu', 'emu' ]:
            selections += ActualSelection(config,chan)

    return selections

# check the arguments of the script
if len(sys.argv) < 2:
    print 'Need to provide the name of the directory to store the new cutfiles'
    print 'Syntax: '
    print '%s outputdir' % sys.argv[0]
    sys.exit()

# create output directory
outputdir = sys.argv[1].rstrip('/')
try:
    os.mkdir(outputdir)
except:
    print 'The directory %s cannot be created (or maybe it exists already). Exiting...' % outputdir
    sys.exit()

# loop on possible cutfiles and write them
for cutfile in CutFilesList:
    # get cutfile configuration
    configuration = GetStandardConfig(cutfile[0],cutfile[1])
    # try to create the new file
    outputFile = open(outputdir+'/'+configuration.cutfileName,'w')
    outputFile.write(Header(configuration))
    outputFile.write(ObjectCollections(configuration))
    outputFile.write(Truth(configuration))
    outputFile.write(ObjectSelection(configuration))
    outputFile.write(Systematics(configuration))
    outputFile.write(Output(configuration))
    outputFile.write(GRL(configuration))
    outputFile.write(PileUp(configuration))
    outputFile.write(MetaData(configuration))
    outputFile.write(Selections(configuration))
    outputFile.close()

print 'New cutfiles written in '+outputdir+'.'
print 'Now checking the diff wrt. the old ones...'

diffFileName = outputdir+'.diff'
diffFile = open(diffFileName,'w')
diffFile.close()

# loop on possible cutfiles and make the diff between the old and the new
for cutfile in CutFilesList:
    # get cutfile configuration
    configuration = GetStandardConfig(cutfile[0],cutfile[1])
    newFileName = outputdir+'/'+configuration.cutfileName
    oldFileName = ROOT.PathResolver.find_file(configuration.cutfileName, "DATAPATH", ROOT.PathResolver.RecursiveSearch)
    if (oldFileName == ''):
        print 'Warning: can\'t find old file '+configuration.cutfileName+' - no comparison can be made! Moving  to next one...'
    else:
        os.system('diff -c '+oldFileName+' '+newFileName+' >> '+diffFileName)

print 'Possible differences written in '+diffFileName
print 'Please check these differences carefully before changing any file!'
